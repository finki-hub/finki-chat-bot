name: finki-chat-bot-dev

services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - '8880:8880'
    environment:
      API_KEY: ${API_KEY}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      OLLAMA_URL: ${OLLAMA_URL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - finki_stack_dev
    restart: unless-stopped

  gpu-api:
    build:
      context: ./gpu-api
      dockerfile: Dockerfile
    ports:
      - '8888:8888'
    networks:
      - finki_stack_dev
    restart: unless-stopped
    gpus: all

  content-api:
    build:
      context: ./content-api
      dockerfile: Dockerfile
    ports:
      - '8808:8808'
    networks:
      - finki_stack_dev
    restart: unless-stopped

  db:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - finki_stack_dev
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - '5550:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    networks:
      - finki_stack_dev
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    user: '0:0'
    restart: unless-stopped

networks:
  finki_stack_dev:
    name: finki_stack_dev
    driver: bridge
    # Set external to true to use an existing network
    # external: true
