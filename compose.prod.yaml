name: finki-chat-bot

services:
  api:
    image: ghcr.io/finki-hub/finki-chat-bot:latest
    ports:
      - '8880:8880'
    environment:
      API_KEY: ${API_KEY}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      OLLAMA_URL: ${OLLAMA_URL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      GPU_API_URL: ${GPU_API_URL}
      CONTENT_API_URL: ${CONTENT_API_URL}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - finki_stack
    restart: unless-stopped

  content-api:
    image: ghcr.io/finki-hub/finki-chat-bot-content-api:latest
    ports:
      - '8808:8808'
    networks:
      - finki_stack_dev
    restart: unless-stopped

  db:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - finki_stack
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - '5555:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    networks:
      - finki_stack
    user: '0:0'
    restart: unless-stopped

  mongo:
    image: mongo:8
    restart: unless-stopped
    ports:
      - '27017:27017'
    volumes:
      - ./mongo-data:/data/db
    networks:
      - finki_stack
    healthcheck:
      test: ['CMD', 'mongosh', '--quiet', '--eval', "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    ports:
      - '8082:8081'
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ADMIN_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ADMIN_PASSWORD}
    networks:
      - finki_stack
    depends_on:
      mongo:
        condition: service_healthy

  usage-data:
    image: ghcr.io/finki-hub/finki-chat-bot-usage-data:latest
    ports:
      - '8088:8088'
    environment:
      MONGO_URL: ${MONGO_URL}
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - finki_stack
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -fs http://127.0.0.1:3001/health/ || exit 1']
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  finki_stack:
    name: finki_stack
    driver: bridge
    # Set external to true to use an existing network
    # external: true
